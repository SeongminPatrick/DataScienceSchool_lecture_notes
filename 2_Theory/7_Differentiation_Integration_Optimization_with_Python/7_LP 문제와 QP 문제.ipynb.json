{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "86cc40d6d25e472cb7d8aa8d7b8ec29c"
   },
   "source": [
    "# LP 문제와 QP 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "c8a9568fe8624adabcc1434e453e81d6"
   },
   "source": [
    "## Linear Programming 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "432440b802e94bceb78d279677616e0b"
   },
   "source": [
    "방정식이나 부등식 제한 조건을 가지는 선형 모형(linear model, linear combination)의 값을 최소화하는 문제를 **LP(Linear Programming)** 문제라고 한다.\n",
    "\n",
    "$$\n",
    "\\begin{eqnarray}\n",
    "\\min_x c^Tx \\\\\n",
    "Ax = b \\\\\n",
    "x \\geq 0\n",
    "\\end{eqnarray}\n",
    "$$\n",
    "\n",
    "위와 같은 형태를 LP 문제의 기본형(standard form)이라고 한다. 마지막 부등식 제한 조건은 벡터 $x$의 모든 원소가 양수거나 0이 되어야 한다는 것을 의미한다. 이러한 문제의 답이 존재하면 문제가 **실현 가능(feasible)**하다고 하고 답이 존재하지 않으면 **실현 불가능(infeasible)**이라고 한다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "dd6f54b614aa47699f657efce79d2a12"
   },
   "source": [
    "다음은 LP 문제의 한 예이다.\n",
    "\n",
    "$$\n",
    "\\min_x \\begin{bmatrix} -4 & -3 & 0 & 0 & 0 \\end{bmatrix}\n",
    "\\begin{bmatrix}\n",
    "x_1 \\\\ x_2 \\\\ x_3 \\\\ x_4 \\\\ x_5 \\\\\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "1 & 1 & 1 & 0 & 0 \\\\\n",
    "2 & 1 & 0 & 1 & 0 \\\\\n",
    "3 & 4 & 0 & 0 & 1 \\\\\n",
    "\\end{bmatrix}\n",
    "\\begin{bmatrix}\n",
    "x_1 \\\\ x_2 \\\\ x_3 \\\\ x_4 \\\\ x_5\n",
    "\\end{bmatrix}=\n",
    "\\begin{bmatrix}\n",
    "100 \\\\ 150 \\\\ 360\n",
    "\\end{bmatrix}\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\begin{bmatrix}\n",
    "x_1 \\\\ x_2 \\\\ x_3 \\\\ x_4 \\\\ x_5\n",
    "\\end{bmatrix}\\geq\n",
    "\\begin{bmatrix}\n",
    "0 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ 0\n",
    "\\end{bmatrix}\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "117baac3a21b4271a8fb917c82465a35"
   },
   "source": [
    "LP 문제는 여러가지로 변형할 수 있는데 만약 일반적인 부등식 제한 조건 대신 특정한 기저 벡터들의 양수 선형 조합에 속해야 한다는 조건이 있으면 CP(Conic Programming) 문제라고 하고 만약 LP 문제에 $x$의 모든 원소가 정수이어야 한다는 조건이 추가되면 IP(Integer Programming) 문제라고 한다. 모든 $x$의 원소가 아니라 일부 원소만 정수이어야 하면 MIP(Mixed Integer Programming) 문제라고 한다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "7da16fe626a448dfa82fffca66c92904"
   },
   "source": [
    "scipy 패키지의 `scipy.optimize.linprog` 명령을 사용하면 LP 문제를 풀 수 있다. 사용법은 다음과 같다. 인수 이름 `A_eq`, `b_eq`는 반드시 써줘야 한다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "school_cell_uuid": "6c558053b6784cf891a4760d64a8e531"
   },
   "outputs": [],
   "source": [
    "A = np.array([[1, 1, 1, 0, 0],\n",
    "              [2, 1, 0, 1, 0],\n",
    "              [3, 4, 0, 0, 1]])\n",
    "b = np.array([100, 150, 350])\n",
    "c = np.array([-4, -3, 0, 0, 0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "school_cell_uuid": "f318cfd2fb2f457ba8d6cc958f1998ed"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     fun: -350.0\n",
       " message: 'Optimization terminated successfully.'\n",
       "     nit: 4\n",
       "   slack: array([], dtype=float64)\n",
       "  status: 0\n",
       " success: True\n",
       "       x: array([ 50.,  50.,   0.,   0.,   0.])"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import scipy.optimize\n",
    "result = sp.optimize.linprog(c, A_eq=A, b_eq=b)\n",
    "result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "4ca784c4be6e43668e6be3b8185d20e0"
   },
   "source": [
    "## Quadratic Programming 문제"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "a54a9fe92a4d4e13ba638b376360d178"
   },
   "source": [
    "방정식이나 부등식 제한 조건을 가지는 일반화된 이차형식(quadratic form)의 값을 최소화하는 문제를 **QP(Quadratic Programming)** 문제라고 한다.\n",
    "\n",
    "$$\n",
    "\\begin{eqnarray}\n",
    "\\min_x \\dfrac{1}{2}x^TQx + c^Tx \\\\\n",
    "Ax = b \\\\\n",
    "x \\geq 0\n",
    "\\end{eqnarray}\n",
    "$$\n",
    "\n",
    "마지막 부등식 제한 조건은 벡터 $x$의 모든 원소가 양수거나 0이 되어야 한다는 것을 의미한다. 이러한 문제의 답이 존재하면 문제가 **실현 가능(feasible)**하다고 하고 답이 존재하지 않으면 **실현 불가능(infeasible)**이라고 한다."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "school_cell_uuid": "2acb0f873eb64398840d0cbeb91be69c"
   },
   "source": [
    "잔차 제곱합을 최소화하기 위한 데이터 분석 모형은 부가 조건이 있는 경우 대부분 QP 문제가 된다."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}